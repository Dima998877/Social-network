{"version":3,"file":"static/js/177.b5732d0c.chunk.js","mappings":"kNACA,GAAgB,QAAU,yBAAyB,cAAgB,+BAA+B,WAAa,4BAA4B,WAAa,4BAA4B,gBAAkB,iCAAiC,kBAAoB,oC,sCCKvPA,EAAO,YAAcC,IAAAA,GAazB,EAXoB,SAACA,GAClB,OACG,iBAAKC,UAAWC,EAAAA,QAAU,WACvB,gBAAKD,UAAWC,EAAAA,WAAcC,IAAI,sGAAsGC,IAAI,cAC5I,SAAC,KAAO,CAACC,GAAIN,EAAK,SAAGC,EAAMM,SAGpC,ECFA,EARgB,SAACN,GACd,OACG,gBAAKC,UAAWC,EAAAA,QAAU,SAAEF,EAAMO,SAExC,E,uCCAMC,GAAeC,EAAAA,EAAAA,GAAiB,KAWhCC,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,sBAAlBD,EAVL,SAACX,GACrB,OACG,kBAAMa,SAAUb,EAAMc,aAAcb,UAAWc,EAAAA,WAAkB,WAC9D,SAACC,EAAA,EAAK,CAACC,UAAWC,EAAAA,GAAUZ,KAAM,iBAAkBa,YAAa,qBACjElB,UAAWc,EAAAA,gBAAwBK,SAAU,CAACC,EAAAA,EAAUb,MACxD,mBAAQP,UAAWc,EAAAA,kBAAyB,oBAGrD,IA8BA,EA1BgB,SAACf,GAEd,IAAIsB,EAAiBtB,EAAMuB,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAW,CAAYnB,KAAMmB,EAAEnB,KAAMoB,GAAID,EAAEC,IAA1BD,EAAEC,GAA8B,IAE1FC,EAAkB3B,EAAM4B,SAASJ,KAAI,SAAAK,GAAC,OAAI,SAAC,EAAO,CAAYtB,QAASsB,EAAEtB,QAASmB,GAAIG,EAAEH,IAAhCG,EAAEH,GAAoC,IAIlG,OAAK1B,EAAM8B,QAGR,iBAAK7B,UAAWc,EAAAA,QAAe,WAC5B,qCACA,iBAAKd,UAAWc,EAAAA,cAAqB,WAClC,gBAAKd,UAAWc,EAAAA,aAAoB,SAChCO,KAEJ,gBAAKrB,UAAWc,EAAAA,SAAgB,SAC5BY,QAGR,SAACjB,EAAmB,CAACG,SAfT,SAACkB,GAAa/B,EAAMgC,WAAWD,EAAOE,eAAe,QAE5C,SAAC,KAAQ,CAAC5B,GAAG,UAgB1C,EChCA,GAAe6B,EAAAA,EAAAA,KACZC,EAAAA,EAAAA,KATqB,SAACC,GACtB,MAAO,CACJb,QAASa,EAAMC,YAAYd,QAC3BK,SAAUQ,EAAMC,YAAYT,SAC5BU,eAAgBF,EAAMC,YAAYC,eAExC,GAG4B,CAACN,WAAAA,EAAAA,IAC1BO,EAAAA,EAFH,CAGEC,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogs_items\":\"Dialogs_dialogs_items__JafqC\",\"contactImg\":\"Dialogs_contactImg__uf3or\",\"text_input\":\"Dialogs_text_input__phs6Y\",\"text_input_area\":\"Dialogs_text_input_area__2Aq8d\",\"text_input_button\":\"Dialogs_text_input_button__GGS2y\"};","import React from \"react\";\nimport s from './../Dialogs.module.css'\nimport props from 'prop-types';\nimport { NavLink } from \"react-router-dom\";\n\n\nlet path = '/dialogs/' + props.id;\n\nconst DialogsItem = (props) => {\n   return (\n      <div className={s.contact}>\n         <img className={s.contactImg} src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTti2je5jP4NJyie2Gjynf4ZklgkTOOGdloLQ&usqp=CAU' alt='userIcon' />\n         <NavLink to={path} >{props.name}</NavLink>\n      </div>\n   )\n}\n\n\n\nexport default DialogsItem;","import React from \"react\";\nimport s from './../Dialogs.module.css'\n\n\n\nconst Message = (props) => {\n   return (\n      <div className={s.message}>{props.message}</div>\n   )\n}\n\n\n\nexport default Message;","import React from \"react\";\nimport { Navigate } from 'react-router-dom';\nimport styles from './Dialogs.module.css'\nimport DialogsItem from './DialogsItem/DialogsItem'\nimport Message from \"./Message/Message\";\nimport { Field, reduxForm } from 'redux-form'\nimport { Textarea } from '../Common/FormControls/FormControls';\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\n\nconst maxLength100 = maxLengthCreator(100)\nconst AddMessageForm = (props) => {\n   return (\n      <form onSubmit={props.handleSubmit} className={styles.text_input}>\n         <Field component={Textarea} name={'newMessageBody'} placeholder={'Enter your message'}\n         className={styles.text_input_area} validate={[required, maxLength100]} />\n         <button className={styles.text_input_button}>Send</button>\n      </form>\n   )\n}\n\nconst AddMessageReduxForm = reduxForm({ form: 'dialogsMessageForm'})(AddMessageForm)\n\nconst Dialogs = (props) => {\n\n   let dialogsElement = props.dialogs.map(d => <DialogsItem key={d.id} name={d.name} id={d.id} />)\n\n   let messagesElement = props.messages.map(m => <Message key={m.id} message={m.message} id={m.id} />)\n\n   let addMessage = (values) => { props.addMessage(values.newMessageBody)}\n\n   if (!props.isAuth) return <Navigate to='/login' />\n\n   return (\n      <div className={styles.dialogs}>\n         <h3>Dialogs</h3>\n         <div className={styles.dialogs_items}>\n            <div className={styles.contact_list}>\n               {dialogsElement}\n            </div>\n            <div className={styles.messages}>\n               {messagesElement}\n            </div>\n         </div>\n        <AddMessageReduxForm onSubmit={addMessage} />\n      </div>\n   )\n}\n\nexport default Dialogs;","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withAuthRedirect } from '../../Hoc/withAuthRedirect';\nimport { addMessage } from \"../../redux/dialogs-reducer\";\nimport Dialogs from './Dialogs';\n\nconst mapStateToProps = (state) => {\n   return {\n      dialogs: state.dialogsPage.dialogs,\n      messages: state.dialogsPage.messages,\n      newMessageText: state.dialogsPage.newMessageText,\n   }\n}\n\nexport default compose(\n   connect(mapStateToProps, {addMessage}),\n   withAuthRedirect\n)(Dialogs);"],"names":["path","props","className","s","src","alt","to","name","message","maxLength100","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","styles","Field","component","Textarea","placeholder","validate","required","dialogsElement","dialogs","map","d","id","messagesElement","messages","m","isAuth","values","addMessage","newMessageBody","compose","connect","state","dialogsPage","newMessageText","withAuthRedirect","Dialogs"],"sourceRoot":""}